{"version":3,"sources":["Components/SearchBtn.js","Components/Shelf.js","BooksAPI.js","Components/Book.js","Components/Pages/HomePage.js","Components/Pages/SearchPage.js","App.js","index.js"],"names":["SearchBtn","props","to","className","Shelf","title","children","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","books","update","book","shelf","id","method","body","JSON","stringify","search","query","Book","useState","currShelf","setCurrShelf","currBook","setCurrBook","updatingBooks","event","a","target","value","closest","splice","setFlag","style","width","height","backgroundImage","url","onChange","disabled","authors","HomePage","propsRef","useRef","useEffect","current","console","log","appendingFilteredBooks","booksArr","map","key","join","imageLinks","thumbnail","wantToRead","currentlyReading","read","SearchPage","setQuery","searchBooks","setSearchBooks","stateRef","searching","input","searchRes","Array","isArray","searchResUpdated","check","find","b","filter","type","placeholder","undefined","length","error","App","booksState","setBooksState","flag","foos","fetchingBooksFunc","shelfType","fetching","Fragment","path","exact","ReactDOM","render","document","getElementById"],"mappings":"yPAYeA,MATf,SAAmBC,GACjB,OACE,cAAC,IAAD,CAAMC,GAAG,UAAT,SACE,qBAAKC,UAAU,cAAf,SACE,+CCMOC,MAZf,SAAeH,GACb,OACE,sBAAKE,UAAU,YAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCF,EAAMI,QACvC,qBAAKF,UAAU,kBAAf,SACE,oBAAIA,UAAU,aAAd,SACGF,EAAMK,iBCPXC,EAAM,wCAGRC,EAAQC,aAAaD,MACpBA,IAAOA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAE5E,IAAMC,EAAU,CACdC,OAAQ,mBACRC,cAAeR,GAQJS,EAAS,kBACpBC,MAAM,GAAD,OAAIX,EAAJ,UAAiB,CAAEO,YACrBK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUA,EAAKC,UAEZC,EAAS,SAACC,EAAMC,GAAP,OACpBR,MAAM,GAAD,OAAIX,EAAJ,kBAAiBkB,EAAKE,IAAM,CAC/BC,OAAQ,MACRd,QAAQ,2BACHA,GADE,IAEL,eAAgB,qBAElBe,KAAMC,KAAKC,UAAU,CAAEL,YACtBP,MAAK,SAACC,GAAD,OAASA,EAAIC,WAEVW,EAAS,SAACC,GAAD,OACpBf,MAAM,GAAD,OAAIX,EAAJ,WAAkB,CACrBqB,OAAQ,OACRd,QAAQ,2BACHA,GADE,IAEL,eAAgB,qBAElBe,KAAMC,KAAKC,UAAU,CAAEE,YAEtBd,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUA,EAAKC,UCYVW,MAnDf,SAAcjC,GACZ,MAAkCkC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,uCAAG,WAAgBC,GAAhB,iBAAAC,EAAA,6DACdhB,EAAQe,EAAME,OAAOC,MAErBnB,EAAOgB,EAAME,OAAOE,QAAQ,SAGlCR,EAAaD,EAAUU,QAAQ,EAAG,EAAGpB,IACrCa,EAAYD,EAASQ,QAAQ,EAAG,EAAGrB,IAPf,SAUdD,EAAOc,EAAS,GAAIF,EAAU,IAVhB,OAWpBnC,EAAM8C,SAAQ,GAXM,2CAAH,sDAenB,OACE,6BACE,sBAAK5C,UAAU,OAAOwB,GAAI1B,EAAM0B,GAAhC,UACE,sBAAKxB,UAAU,WAAf,UACE,qBACEA,UAAU,aACV6C,MAAO,CACLC,MAAO,IACPC,OAAQ,IAERC,gBAAgB,OAAD,OAASlD,EAAMmD,IAAf,QAGnB,qBAAKjD,UAAU,qBAAf,SACE,yBAAQkD,SAAUb,EAAeI,MAAO3C,EAAMyB,OAAS,OAAvD,UACE,wBAAQkB,MAAM,OAAOU,UAAQ,EAA7B,wBAGA,wBAAQV,MAAM,aAAd,0BACA,wBAAQA,MAAM,mBAAd,+BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,0BAIN,qBAAKzC,UAAU,aAAf,SAA6BF,EAAMI,QACnC,qBAAKF,UAAU,eAAf,SAA+BF,EAAMsD,UACrC,8BCIOC,EAhDE,SAAUvD,GACzB,IAAMwD,EAAWC,kBAAO,GAExBC,qBAAU,WACJF,EAASG,QACXC,QAAQC,IAAI7D,GAEZwD,EAASG,SAAU,IAEpB,CAAC3D,IAEJ,IAAM8D,EAAyB,SAAUC,GAcvC,OAbYA,EAASC,KAAI,SAACxC,GACxB,OACE,wBAAC,EAAD,2BACMxB,GADN,IAEEiE,IAAKzC,EAAKE,GACVA,GAAIF,EAAKE,GACTtB,MAAOoB,EAAKpB,MACZkD,QAAS9B,EAAK8B,QAAQY,KAAK,KAC3Bf,IAAK3B,EAAK2C,WAAWC,UACrB3C,MAAOD,EAAKC,aAOpB,OACE,sBAAKvB,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,4CAEF,qBAAKA,UAAU,uBACf,cAAC,EAAD,yBAAOE,MAAM,gBAAmBJ,GAAhC,aACG8D,EAAuB9D,EAAMqE,eAEhC,cAAC,EAAD,yBAAOjE,MAAM,qBAAwBJ,GAArC,aACG8D,EAAuB9D,EAAMsE,qBAEhC,cAAC,EAAD,yBAAOlE,MAAM,QAAWJ,GAAxB,aACG8D,EAAuB9D,EAAMuE,SAEhC,cAAC,EAAD,QC2ESC,MArHf,SAAoBxE,GAClB,MAA0BkC,mBAAS,IAAnC,mBAAOF,EAAP,KAAcyC,EAAd,KACA,EAAsCvC,mBAAS,IAA/C,mBAAOwC,EAAP,KAAoBC,EAApB,KAEMC,EAAWnB,kBAAO,GAExBA,kBAAO,WACDmB,EAASjB,UAEXiB,EAASjB,SAAU,KAEpB,CAACe,IAEJ,IAAMG,EAAS,uCAAG,WAAgBrC,GAAhB,mBAAAC,EAAA,6DAChBkC,EAAe,IADC,SAGRG,EAAQtC,EAAME,OAAOC,MAE3B8B,GAAS,WACP,OAAOK,KANK,SASU/C,EAAOC,GATjB,UASR+C,EATQ,OAWdnB,QAAQC,IAAIkB,IAERC,MAAMC,QAAQF,GAbJ,iBAcNG,EAAmBH,EACtBf,KAAI,SAACxC,GACJ,IAAM2D,EAAQnF,EAAMsB,MAAM8D,MAAK,SAACC,GAC9B,OAAOA,EAAE3D,KAAOF,EAAKE,MAOvB,OAJEF,EAAKC,MADH0D,EACWA,EAAM1D,MAEN,OAERD,KAER8D,QAAO,SAACnE,GACP,OAAOA,EAAIgD,cAGfQ,GAAe,WACb,OAAOO,KA/BG,+BAkCZP,EAAe,IAlCH,kBAmCL,mEAnCK,0DAsCdf,QAAQC,IAAR,MAtCc,0DAAH,sDA+Df,OACE,gCACE,sBAAK3D,UAAU,eAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,IAAD,CAAMD,GAAG,IAAT,SACE,wBAAQC,UAAU,eAAlB,qBAEF,qBAAKA,UAAU,6BAAf,SASE,uBACEqF,KAAK,OACLC,YAAY,+CACZpC,SAAUyB,SAIhB,qBAAK3E,UAAU,uBAAf,SACE,oBAAIA,UAAU,oBAIlB,cAAC,EAAD,IACA,sBAAKA,UAAU,aAAf,eACmBuF,IAAhBf,GAA8C,IAAjB1C,EAAM0D,QAClC,uEAEeD,IAAhBf,GACkB,IAAjB1C,EAAM0D,QAvDiB,SAAU3B,GACvC,IAcE,OAbYA,EAASC,KAAI,SAACxC,GACxB,OACE,wBAAC,EAAD,2BACMxB,GADN,IAEEiE,IAAKzC,EAAKE,GACVA,GAAIF,EAAKE,GACTtB,MAAOoB,EAAKpB,MACZkD,QAAS9B,EAAK8B,QACdH,IAAK3B,EAAK2C,WAAWC,UACrB3C,MAAOD,EAAKC,YAKlB,MAAOkE,GACP/B,QAAQC,IAAI8B,IAuCR7B,CAAuBY,U,MC7GlB,SAASkB,EAAI5F,GAC1B,IAOA,EAAoCkC,mBAPnB,CACfZ,MAAO,GACP+C,WAAY,GACZC,iBAAkB,GAClBC,KAAM,KAGR,mBAAOsB,EAAP,KAAmBC,EAAnB,KACA,EAAwB5D,oBAAS,GAAjC,mBAAO6D,EAAP,KAAajD,EAAb,KAEAY,qBAAU,WACJqC,GACFC,MAED,CAACD,IAEJ,IAAMC,EAAI,uCAAG,oCAAAvD,EAAA,sEAEHwD,EAFG,+BAAAxD,EAAA,MAEiB,WAAgByD,GAAhB,iBAAAzD,EAAA,sEACDzB,IADC,cAClBmF,EADkB,gBAEHA,EAASb,QAAO,SAAC9D,GACpC,OAAOA,EAAKC,QAAL,UAAkByE,MAHH,cAElBZ,EAFkB,yBAKjBA,GALiB,2CAFjB,+DASctE,IATd,cASHmF,EATG,gBAUgBF,EAAkB,cAVlC,cAUH5B,EAVG,iBAWsB4B,EAAkB,oBAXxC,eAWH3B,EAXG,iBAYU2B,EAAkB,QAZ5B,QAYH1B,EAZG,OAcTuB,GAAc,WACZ,MAAO,CACLxE,MAAO6E,EACP9B,WAAYA,EACZC,iBAAkBA,EAClBC,KAAMA,MAGVzB,GAAQ,GAtBC,kDAwBTc,QAAQC,IAAR,MAxBS,0DAAH,qDA4BV,OACE,eAAC,IAAMuC,SAAP,WACE,qBAAKlG,UAAU,QACf,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmG,KAAK,IAAIC,OAAO,EAAvB,SACE,cAAC,EAAD,2BACMT,GADN,IAEE/C,QAASA,OAGb,cAAC,IAAD,CAAOuD,KAAK,UAAUC,OAAO,EAA7B,SACE,cAAC,EAAD,2BAAgBT,GAAhB,IAA4B/C,QAASA,a,MC1D/CyD,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.32612292.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SearchBtn(props) {\r\n  return (\r\n    <Link to=\"/search\">\r\n      <div className=\"open-search\">\r\n        <p>Add Books</p>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\nexport default SearchBtn;\r\n","import React from \"react\";\r\nfunction Shelf(props) {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{props.title}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {props.children}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Shelf;\r\n","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token;\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import React, { useState } from \"react\";\r\nimport { update } from \"./../BooksAPI\";\r\nfunction Book(props) {\r\n  const [currShelf, setCurrShelf] = useState([]);\r\n  const [currBook, setCurrBook] = useState([]);\r\n\r\n  const updatingBooks = async function (event) {\r\n    const shelf = event.target.value;\r\n\r\n    const book = event.target.closest(\".book\");\r\n\r\n\r\n    setCurrShelf(currShelf.splice(-1, 0, shelf));\r\n    setCurrBook(currBook.splice(-1, 0, book));\r\n\r\n\r\n    await update(currBook[0], currShelf[0]);\r\n    props.setFlag(true);\r\n    // props.setRef = false;\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <div className=\"book\" id={props.id}>\r\n        <div className=\"book-top\">\r\n          <div\r\n            className=\"book-cover\"\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n\r\n              backgroundImage: `url(${props.url})`,\r\n            }}\r\n          />\r\n          <div className=\"book-shelf-changer\">\r\n            <select onChange={updatingBooks} value={props.shelf || \"none\"}>\r\n              <option value=\"move\" disabled>\r\n                Move to...\r\n              </option>\r\n              <option value=\"wantToRead\">Want to Read</option>\r\n              <option value=\"currentlyReading\">Currently Reading</option>\r\n              <option value=\"read\">Read</option>\r\n              <option value=\"none\">None</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"book-title\">{props.title}</div>\r\n        <div className=\"book-authors\">{props.authors}</div>\r\n        <div></div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\nexport default Book;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Search from \"../SearchBtn\";\r\nimport Shelf from \"../Shelf\";\r\nimport Book from \"../Book\";\r\nconst HomePage = function (props) {\r\n  const propsRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (propsRef.current) {\r\n      console.log(props);\r\n    } else {\r\n      propsRef.current = true;\r\n    }\r\n  }, [props]);\r\n\r\n  const appendingFilteredBooks = function (booksArr) {\r\n    const res = booksArr.map((book) => {\r\n      return (\r\n        <Book\r\n          {...props}\r\n          key={book.id}\r\n          id={book.id}\r\n          title={book.title}\r\n          authors={book.authors.join(\",\")}\r\n          url={book.imageLinks.thumbnail}\r\n          shelf={book.shelf}\r\n        />\r\n      );\r\n    });\r\n    return res;\r\n  };\r\n\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>My Reads</h1>\r\n      </div>\r\n      <div className=\"list-books-content\" />\r\n      <Shelf title=\"Want to read\" {...props}>\r\n        {appendingFilteredBooks(props.wantToRead)}\r\n      </Shelf>\r\n      <Shelf title=\"Currently reading\" {...props}>\r\n        {appendingFilteredBooks(props.currentlyReading)}\r\n      </Shelf>\r\n      <Shelf title=\"Read\" {...props}>\r\n        {appendingFilteredBooks(props.read)}\r\n      </Shelf>\r\n      <Search />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Search from \"../SearchBtn\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { search } from \"./../../BooksAPI\";\r\nimport Book from \"../Book\";\r\nfunction SearchPage(props) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searchBooks, setSearchBooks] = useState({});\r\n\r\n  const stateRef = useRef(false);\r\n\r\n  useRef(() => {\r\n    if (stateRef.current) {\r\n    } else {\r\n      stateRef.current = true;\r\n    }\r\n  }, [searchBooks]);\r\n\r\n  const searching = async function (event) {\r\n    setSearchBooks({});\r\n    try {\r\n      const input = event.target.value;\r\n\r\n      setQuery(() => {\r\n        return input;\r\n      });\r\n\r\n      const searchRes = await search(query);\r\n\r\n      console.log(searchRes);\r\n\r\n      if (Array.isArray(searchRes)) {\r\n        const searchResUpdated = searchRes\r\n          .map((book) => {\r\n            const check = props.books.find((b) => {\r\n              return b.id === book.id;\r\n            });\r\n            if (check) {\r\n              book.shelf = check.shelf;\r\n            } else {\r\n              book.shelf = \"none\";\r\n            }\r\n            return book;\r\n          })\r\n          .filter((res) => {\r\n            return res.imageLinks;\r\n          });\r\n\r\n        setSearchBooks(() => {\r\n          return searchResUpdated;\r\n        });\r\n      } else {\r\n        setSearchBooks({});\r\n        return <h1>Please enter a valid search term</h1>;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const appendingFilteredBooks = function (booksArr) {\r\n    try {\r\n      const res = booksArr.map((book) => {\r\n        return (\r\n          <Book\r\n            {...props}\r\n            key={book.id}\r\n            id={book.id}\r\n            title={book.title}\r\n            authors={book.authors}\r\n            url={book.imageLinks.thumbnail}\r\n            shelf={book.shelf}\r\n          />\r\n        );\r\n      });\r\n      return res;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\">\r\n            <button className=\"close-search\">Close</button>\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author (example: Science)\"\r\n              onChange={searching}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\" />\r\n        </div>\r\n      </div>\r\n\r\n      <Search />\r\n      <div className=\"books-grid\">\r\n        {searchBooks === undefined && query.length === 0 && (\r\n          <h1>Please enter a valid search term</h1>\r\n        )}\r\n        {searchBooks !== undefined &&\r\n          query.length !== 0 &&\r\n          appendingFilteredBooks(searchBooks)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"./Components/Pages/HomePage\";\r\nimport SearchPage from \"./Components/Pages/SearchPage\";\r\nimport { getAll } from \"./BooksAPI\";\r\nimport \"./App.css\";\r\n\r\nexport default function App(props) {\r\n  const booksObj = {\r\n    books: [],\r\n    wantToRead: [],\r\n    currentlyReading: [],\r\n    read: [],\r\n  };\r\n\r\n  const [booksState, setBooksState] = useState(booksObj);\r\n  const [flag, setFlag] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (flag) {\r\n      foos();\r\n    }\r\n  }, [flag]);\r\n\r\n  const foos = async function () {\r\n    try {\r\n      const fetchingBooksFunc = async function (shelfType) {\r\n        const fetching = await getAll();\r\n        const filter = await fetching.filter((book) => {\r\n          return book.shelf === `${shelfType}`;\r\n        });\r\n        return filter;\r\n      };\r\n      const fetching = await getAll();\r\n      const wantToRead = await fetchingBooksFunc(\"wantToRead\");\r\n      const currentlyReading = await fetchingBooksFunc(\"currentlyReading\");\r\n      const read = await fetchingBooksFunc(\"read\");\r\n\r\n      setBooksState(() => {\r\n        return {\r\n          books: fetching,\r\n          wantToRead: wantToRead,\r\n          currentlyReading: currentlyReading,\r\n          read: read,\r\n        };\r\n      });\r\n      setFlag(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"app\" />\r\n      <Switch>\r\n        <Route path=\"/\" exact={true}>\r\n          <HomePage\r\n            {...booksState}\r\n            setFlag={setFlag} /* setRef={propsRef.current}*/\r\n          />\r\n        </Route>\r\n        <Route path=\"/search\" exact={true}>\r\n          <SearchPage {...booksState} setFlag={setFlag} />\r\n        </Route>\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}